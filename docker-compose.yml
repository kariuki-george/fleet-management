version: '3'

services:
  ingest-fleet-management: 
    depends_on:
      - kafka-fleet-management
    image: kariukigeorge/ingest-fleet-management
    env_file:
      - ./ingest-service/.env 
    ports: 
      - 5555:5555 
    container_name: ingest-fleet-management
    restart: unless-stopped
    networks:
        - fleet-management-network
  
  zookeeper-fleet-management:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper-fleet-management
    ports:
      - "5557:2181"
    restart: unless-stopped
    networks:
      - fleet-management-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 5557
      ZOOKEEPER_TICK_TIME: 2000
    

  kafka-fleet-management:
    image: confluentinc/cp-kafka:7.3.2
    container_name: kafka-fleet-management
    ports:
      - "5558:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-fleet-management:9092,PLAINTEXT_INTERNAL://kafka-fleet-management:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka-fleet-management
      KAFKA_ZOOKEEPER_CONNECT:  zookeeper-fleet-management:5557
    restart: unless-stopped
    networks:
      - fleet-management-network
      
  apigateway-fleet-management:
    image: nginx:alpine
    container_name: apigateway-fleet-management
    ports: 
      - 5550:80
    volumes:
      -  ./api-gateway:/etc/nginx/conf.d
    depends_on:
      - ingest-fleet-management
      - superset-fleet-management 
    restart: unless-stopped
    networks:
      - fleet-management-network
  
  superset-fleet-management:
    container_name: superset-fleet-management
    # build: 
    #   context: ./superset-config
    #   dockerfile: ./Dockerfile
    image: iansawala/superset_conf
    ports:
      - 8080:8088    
    restart: unless-stopped
    networks:
      - fleet-management-network
  
  db-fleet-management:
    image: mysql:8.0
    container_name: mysql-fleet-management
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=sample
    ports:
      - 3306:3306
    restart: unless-stopped
    networks:
      - fleet-management-network
  
  nifi-fleet-management:
    container_name: nifi-fleet-management
    image: apache/nifi
    ports:
      - 8443:8443
    networks:
      - fleet-management-network
    environment:
      - SINGLE_USER_CREDENTIALS_USERNAME=admin
      - SINGLE_USER_CREDENTIALS_PASSWORD=fleetmanagementpassword
    restart: unless-stopped

networks:
  fleet-management-network:
    driver: bridge  
    